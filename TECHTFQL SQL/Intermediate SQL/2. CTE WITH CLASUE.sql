-- CTE [COMMON TABLE EXPRESSION]
select * from employees_new;

-- QUERY 1
-- Selecting employees with a salary higher than the overall average salary
WITH average_salary AS
(
    SELECT * 
    FROM employees_new
    WHERE salary > (SELECT AVG(salary) FROM employees_new)
)

-- OR

-- Selecting employees with a salary higher than the departmental average salary
WITH average_salary (avg_salary) AS
(
    SELECT ROUND(AVG(salary), 2) FROM employees_new
)
SELECT * 
FROM employees_new e, average_salary av 
WHERE e.salary > av.avg_salary;

-- QUERY 2
-- FIND THE STORES WHO'S SALES WHERE BETTER THAN THE AVERAGE SALES ACCROSS ALL STORES.
-- SUBQUERY
-- 1.  TOTAL SALES PER EACH STORE -- TOTAL_SALES.

SELECT S.STORE_ID , SUM(COST) AS TOTAL_SALES_PER_STORE  -- TOTAL_SALES
FROM SALES S GROUP BY S.STORE_ID; 

-- 2. FIND THE AVERAGE SALES WITH RESPECT ALL THE STORES.-- AVG_SALES

SELECT CAST(AVG(TOTAL_SALES_PER_STORE)  AS INT) AS AVG_SALES_FOR_ALL_STORES
FROM(SELECT S.STORE_ID , SUM(COST) AS TOTAL_SALES_PER_STORE
FROM SALES S GROUP BY S.STORE_ID) X;

--3. Find stores where total sales > average sales of all stores
SELECT *
FROM (
    SELECT S.STORE_ID, SUM(COST) AS TOTAL_SALES_PER_STORE
    FROM SALES S
    GROUP BY S.STORE_ID
) AS TOTAL_SALES
JOIN (
    SELECT CAST(AVG(TOTAL_SALES_PER_STORE) AS DECIMAL(10, 2)) AS AVG_SALES_FOR_ALL_STORES
    FROM (
        SELECT S.STORE_ID, SUM(COST) AS TOTAL_SALES_PER_STORE
        FROM SALES S
        GROUP BY S.STORE_ID
    ) AS X
) AS AVG_SALES
ON TOTAL_SALES.TOTAL_SALES_PER_STORE > AVG_SALES.AVG_SALES_FOR_ALL_STORES;

-- ANOTHER WAY TO WRITE SAME QUERY  [WITH CLAUSE]

WITH TOTAL_SALES (STORE_ID, TOTAL_SALES_PER_STORE) AS (
    SELECT S.STORE_ID, SUM(COST) AS TOTAL_SALES_PER_STORE
    FROM SALES S
    GROUP BY S.STORE_ID 
),
AVG_SALES (AVG_SALES_FOR_ALL_STORES) AS (
    SELECT CAST(AVG(TOTAL_SALES_PER_STORE) AS DECIMAL(10, 2)) AS AVG_SALES_FOR_ALL_STORES
    FROM TOTAL_SALES
)
SELECT *
FROM TOTAL_SALES TS 
JOIN AVG_SALES AV ON TS.TOTAL_SALES_PER_STORE > AV.AVG_SALES_FOR_ALL_STORES;